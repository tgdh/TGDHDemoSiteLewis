@using System.Web.Mvc.Html
@using UmbracoStarterKit.Core.Data
@using UmbracoStarterKit.Core.Models.Components
@using UmbracoStarterKit.Core.Utility
@inherits UmbracoViewPage<IPublishedContent>
@{
    Layout = "MasterBlog.cshtml";

    var allBlogPosts = BlogRepository.AllBlogPosts(Umbraco).ToList();
    var filteredBlogPosts = BlogRepository.FilterSelection(allBlogPosts, Request.QueryString["author"], Request.QueryString["category"], Request.QueryString["year"], Request.QueryString["month"]).ToList();
    var paging = Paging.GetPages(filteredBlogPosts.Count);
    var selectedBlogPosts = filteredBlogPosts.Skip(paging.Skip).Take(paging.Take).ToList();
}

<main id="main" class="o-page__inner u-clearfix c-header__margin-top" role="main">
	<div class="c-page__wrapper">
	    @Html.Partial("~/Views/Partials/Components/Hero.cshtml", new HeroViewModel
		{
			ImageId = Model.GetPropertyValue<int>("pageImage"),
			Headline = Model.HasValue("headline") ? Model.GetPropertyValue<string>("headline") : Model.Name,
			Copy = Model.GetPropertyValue<string>("pageDescription")
		})
		<div class="c-grid o-wrap o-wrap--large u-clearfix o-section">
			<section class="o-page__content u-clearfix o-grid--two">
		        @if (selectedBlogPosts.Any())
		        {
		            foreach (var post in selectedBlogPosts)
		            {
		                var articleModel = new TileViewModel
		                {
							Url = post.Url,
							ImageId = post.GetPropertyValue<int>("pageImage"),
							Headline = post.HasValue("headline") ? post.GetPropertyValue<string>("headline") : post.Name,
							Subtitle = post.GetPropertyValue<DateTime>("releaseDate").ToString("%d MMM yyyy"),
							ModifierClass = "o-grid__item"
		                };

		                @Html.Partial("~/Views/Partials/Components/Tile.cshtml", articleModel)
		            }

		            <div class="c-pagination u-clearfix c-pagination__float">
						@PagingTemplate.RenderPaging(paging, Model.Id)
					</div>
		        }
		        else
		        {
		            var homePage = Model.Site();
		            var tagSettings = homePage.Descendant("tagSettings");
		            var noResultsMessage = tagSettings.GetPropertyValue<IHtmlString>("noResultsMessage");

		            if(noResultsMessage != null)
					{
						@noResultsMessage
					}
		        }
		    </section>
			<aside class="o-page__aside">
			    @Html.Partial("~/Views/Partials/Pods/TagPrevalues.cshtml", Model, new ViewDataDictionary { { "title", "Authors" }, { "docType", "author" }, { "baseUrl", Model.Url } })
			    @Html.Partial("~/Views/Partials/Pods/TagPrevalues.cshtml", Model, new ViewDataDictionary { { "title", "Categories" }, { "docType", "category" }, { "baseUrl", Model.Url } })
			    @Html.Partial("~/Views/Partials/Pods/DateArchive.cshtml", allBlogPosts)
			</aside>
		</div>
	</div>
	@Html.Partial("~/Views/Partials/Components/CallToAction.cshtml")
</main>
@Html.Partial("~/Views/Partials/Components/Search.cshtml")
@functions
{

    public string GetMetaById(int id)
    {
        var metaLabel = Umbraco.TypedContent(id);

        if (metaLabel == null)
        {
            return "";
        }

        return metaLabel.Name;
    }

}
